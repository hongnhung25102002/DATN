@model QLKS.Models.tblNhanVien

@{
    ViewBag.Title = "Sửa thông tin cá nhân";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    label.error {
        color: red;
    }
</style>
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        @Html.ActionLink("Admin", "Index")
    </li>
    <li class="breadcrumb-item active">Sửa thông tin cá nhân</li>
</ol>
<div class="card mb-3">
    <div class="card-header">
        <i class="fa fa-table"></i> Sửa thông tin cá nhân
    </div>
    <div class="card-body">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-submit" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ma_nv)

                <div class="form-group">
                    @Html.Label("Họ tên", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ho_ten, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ho_ten, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Ngày sinh", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ngay_sinh, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ngay_sinh, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dia_chi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dia_chi, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Số ĐT", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.sdt, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @*@Html.ValidationMessageFor(model => model.sdt, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Tài khoản", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tai_khoan, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.ValidationMessageFor(model => model.tai_khoan, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.mat_khau, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.ValidationMessageFor(model => model.mat_khau, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.ma_chuc_vu, "ma_chuc_vu", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ma_chuc_vu", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ma_chuc_vu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Admin/acount.js"></script>
@*<script>
    $(document).ready(function () {
        jQuery.validator.addMethod("headphone", function (value, element) {
            var vnf_regex = /((032|033|034|035|036|037|038|039|056|058|059|070|076|077|078|079|081|082|083|084|085|086|087|088|089|090|091|092|093|094|096|097|098|099)+([0-9]{7})\b)/g;
            return vnf_regex.test(value);
        });
        jQuery.validator.addMethod("rigidemail", function (value, element) {
            var testemail = /^([^@@\s]+)@@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i;
            return testemail.test(value);
        });
        jQuery.validator.addMethod("matkhau", function (value, element) {
            var testemail = /^(?=.*[A-Za-z])(?=.*\d)[a-zA-Z0-9!@@#$%^&*()~¥=_+}{":;'?/>.<,`\-\|\[\]]{6,20}$/i;
            return testemail.test(value);
        });
        $("#form-submit").validate({
            rules:
            {
                tai_khoan: {
                    required: true,
                    minlength: 3,
                },
                sdt: {
                    required: true,
                    headphone: true,
                    minlength: 10,
                    min: 0,
                    maxlength: 10,
                    number: isNaN
                },
                mat_khau: {
                    required: true,
                    minlength: 6,
                    maxlength: 20,
                    matkhau: true,
                },
                mail: {
                    required: true,
                    rigidemail: true
                },
                cmt: {
                    required: true,
                    number: isNaN
                }
                //address: {
                //    maxlength:129
                //}
            },
            messages:
            {
                tai_khoan: {
                    required: "Họ tên không được để trống",
                    minlength: "Tên tối thiểu 3 đến 20 kí tự",
                    maxlength: "Tên tối thiểu 3 đến 20 kí tự",
                },
                sdt: {
                    required: "Số điện thoại không được để trống",
                    headphone: "Số điện thoại không hợp lệ",
                    number: "Vui lòng nhập số"
                },
                mat_khau: {
                    required: "Mật khẩu tối thiểu từ 6 đến 20 bao gồm ký tự đặc biệt, số, chữ; phân biệt chữ hoa chữ thường",
                    minlength: "Mật khẩu tối thiểu từ 6 đến 20 bao gồm ký tự đặc biệt, số, chữ; phân biệt chữ hoa chữ thường",
                    matkhau: "Mật khẩu tối thiểu từ 6 đến 20 bao gồm ký tự đặc biệt, số, chữ; phân biệt chữ hoa chữ thường",
                    maxlength: "Mật khẩu tối thiểu từ 6 đến 20 bao gồm ký tự đặc biệt, số, chữ; phân biệt chữ hoa chữ thường",

                },
                mail: {
                    required: "Email không được để trống",
                    rigidemail: "Email không đúng định dạng",
                },
                cmt: {
                    required: "Vui lòng nhập số CMT",
                    number: "Vui lòng nhập số"
                }
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    })
</script>*@